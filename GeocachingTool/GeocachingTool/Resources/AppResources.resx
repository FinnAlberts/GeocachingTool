<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutPageHeader" xml:space="preserve">
    <value>About Geocaching Backpack</value>
  </data>
  <data name="aboutPageParagraph1" xml:space="preserve">
    <value>Geocaching Backpack is developed and maintained by Finn Alberts. Problems can be reported at www.finnalberts.nl/contact.</value>
  </data>
  <data name="aboutPageParagraph2" xml:space="preserve">
    <value>Geocaching is a game where you search the real world for so called 'caches'. Geocaching is property of Groundspeak Incorporated. More information at www.geocaching.com.</value>
  </data>
  <data name="aboutPageParagraph3" xml:space="preserve">
    <value>Used icons are property of Font Awesome and are used under the CCA 4.0 license. More information at www.fontawesome.com/license.</value>
  </data>
  <data name="aboutPageReadMore" xml:space="preserve">
    <value>Read more at </value>
  </data>
  <data name="aboutPageTitle" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="aboutPageVersion" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="areYouSureDelete" xml:space="preserve">
    <value>Are you sure you want to delete this? This action cannot be reversed.</value>
  </data>
  <data name="cachename" xml:space="preserve">
    <value>Name of cache</value>
  </data>
  <data name="calculate" xml:space="preserve">
    <value>Calculate</value>
  </data>
  <data name="calculateProjectionPageAngle" xml:space="preserve">
    <value>Corner in degrees</value>
  </data>
  <data name="calculateProjectionPageDistance" xml:space="preserve">
    <value>Distance in meters</value>
  </data>
  <data name="calculateProjectionPageTitle" xml:space="preserve">
    <value>Calculate projection</value>
  </data>
  <data name="chooseLanguage" xml:space="preserve">
    <value>Choose your language</value>
  </data>
  <data name="chooseTheme" xml:space="preserve">
    <value>Choose a theme</value>
  </data>
  <data name="compassPageDisclaimer" xml:space="preserve">
    <value>Disclaimer</value>
  </data>
  <data name="compassPageDisclaimerText" xml:space="preserve">
    <value>Please note that the accuracy of the compass and distance is strongly dependend on your device. Your location will be updated approximately every 15 seconds and will be accurate to about 10 meters. This also depends on your device. Remember this while caching.</value>
  </data>
  <data name="compassPageNoLocation" xml:space="preserve">
    <value>Your location could not be determined.</value>
  </data>
  <data name="compassPageSetTarget" xml:space="preserve">
    <value>Set target</value>
  </data>
  <data name="compassPageTitle" xml:space="preserve">
    <value>Compass</value>
  </data>
  <data name="convert" xml:space="preserve">
    <value>Convert</value>
  </data>
  <data name="coordinatePageTitle" xml:space="preserve">
    <value>Convert coordinates</value>
  </data>
  <data name="darkTheme" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="ddmToDd" xml:space="preserve">
    <value>DDM to DD</value>
  </data>
  <data name="ddToDdm" xml:space="preserve">
    <value>DD to DDM</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="east" xml:space="preserve">
    <value>East</value>
  </data>
  <data name="eastOrWest" xml:space="preserve">
    <value>East or west?</value>
  </data>
  <data name="error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="errorCompassLocationOff" xml:space="preserve">
    <value>Location on your device is not enabled.</value>
  </data>
  <data name="errorCompassNoPermission" xml:space="preserve">
    <value>For using the compass your location is required.</value>
  </data>
  <data name="errorCompassNoSupport" xml:space="preserve">
    <value>Unfortunately your device does not support compass functionality.</value>
  </data>
  <data name="errorDefault" xml:space="preserve">
    <value>Something went wrong. Please try again.</value>
  </data>
  <data name="errorLetterAlreadyExists" xml:space="preserve">
    <value>This letter already exists. Use a different letter.</value>
  </data>
  <data name="formulaPageDeleteAllLetters" xml:space="preserve">
    <value>Delete all letters</value>
  </data>
  <data name="formulaPageHelp" xml:space="preserve">
    <value>Add letters by tapping 'new'. Give each letter a value and save it. The letter will now appear in the overview. From the overview you can also edit or delete a letter.

In the top of the screen you can enter calculations to calculate a value. These calculations can be simple like 5+5, but they may also contain letters you added. You can use +, -, * and /.

Example: you added the letter 'a' with a value of 4. By entering 10-a you will have a result of 6.</value>
  </data>
  <data name="formulaPageLetter" xml:space="preserve">
    <value>Letter</value>
  </data>
  <data name="formulaPageLetterValues" xml:space="preserve">
    <value>Values of letters</value>
  </data>
  <data name="formulaPageNoLetters" xml:space="preserve">
    <value>You currently have no letters yet. Save a new letter by tapping 'new' in the upper right corner.</value>
  </data>
  <data name="formulaPageTitle" xml:space="preserve">
    <value>Calculate formula</value>
  </data>
  <data name="help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="lightTheme" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="mainPageDescription" xml:space="preserve">
    <value>This backpack contains all the tools you'll need while searching for Geocaches. Quickly find the word value, calculate the next coordinate and save all important information for finding the cache.</value>
  </data>
  <data name="mainPageHeader" xml:space="preserve">
    <value>Explore and search for some caches!</value>
  </data>
  <data name="mainPageTitle" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="mainPageWelcome" xml:space="preserve">
    <value>Welcome to Geocaching Backpack!</value>
  </data>
  <data name="meter" xml:space="preserve">
    <value>meter</value>
  </data>
  <data name="newText" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="north" xml:space="preserve">
    <value>North</value>
  </data>
  <data name="northOrSouth" xml:space="preserve">
    <value>North or south?</value>
  </data>
  <data name="notAllFieldFilledIn" xml:space="preserve">
    <value>Not all fields are filled in. Fill in all fields and try again.</value>
  </data>
  <data name="notesPageNoNotes" xml:space="preserve">
    <value>You currently have no notes yet. Create a new note by tapping 'new' in the top right corner.</value>
  </data>
  <data name="notesPageTitle" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="restart" xml:space="preserve">
    <value>Please restart the app for the changes to apply.</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="set" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="settingsPageTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="stackCountingPageTitle" xml:space="preserve">
    <value>Digital root</value>
  </data>
  <data name="succes" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="succesLetterAdded" xml:space="preserve">
    <value>The letter was succesfully added.</value>
  </data>
  <data name="systemLanguage" xml:space="preserve">
    <value>Based on system settings</value>
  </data>
  <data name="systemTheme" xml:space="preserve">
    <value>Based on system settings</value>
  </data>
  <data name="value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="wordValuePageCountedThrough" xml:space="preserve">
    <value>. The digital root of that is </value>
  </data>
  <data name="wordValuePageTitle" xml:space="preserve">
    <value>Word value</value>
  </data>
  <data name="wordValuePageWordValue" xml:space="preserve">
    <value>The word value is </value>
  </data>
  <data name="wordValueWord" xml:space="preserve">
    <value>Word</value>
  </data>
  <data name="yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="yourNote" xml:space="preserve">
    <value>Your note</value>
  </data>
</root>